{"remainingRequest":"/Users/judithcastrejon/Downloads/Vuejs-portfolio-website/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/judithcastrejon/Downloads/Vuejs-portfolio-website/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/judithcastrejon/Downloads/Vuejs-portfolio-website/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/judithcastrejon/Downloads/Vuejs-portfolio-website/src/components/About.vue?vue&type=template&id=c226fde6&scoped=true&","dependencies":[{"path":"/Users/judithcastrejon/Downloads/Vuejs-portfolio-website/src/components/About.vue","mtime":1651621658196},{"path":"/Users/judithcastrejon/Downloads/Vuejs-portfolio-website/node_modules/cache-loader/dist/cjs.js","mtime":1651600550612},{"path":"/Users/judithcastrejon/Downloads/Vuejs-portfolio-website/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1651600552831},{"path":"/Users/judithcastrejon/Downloads/Vuejs-portfolio-website/node_modules/cache-loader/dist/cjs.js","mtime":1651600550612},{"path":"/Users/judithcastrejon/Downloads/Vuejs-portfolio-website/node_modules/vue-loader/lib/index.js","mtime":1651600552041}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}